{
  "id": "https://schema.management.azure.com/schemas/2025-03-01-preview/NGINX.NGINXPLUS.json#",
  "title": "NGINX.NGINXPLUS",
  "description": "NGINX NGINXPLUS Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "nginxDeployments": {
      "description": "NGINX.NGINXPLUS/nginxDeployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Nginx deployment resource.",
          "oneOf": [
            {
              "pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxDeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/nginxDeployments_apiKeys_childResource"
              },
              {
                "$ref": "#/definitions/nginxDeployments_wafPolicies_childResource"
              },
              {
                "$ref": "#/definitions/nginxDeployments_certificates_childResource"
              },
              {
                "$ref": "#/definitions/nginxDeployments_configurations_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "NGINX.NGINXPLUS/nginxDeployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_apiKeys": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/apiKeys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the API Key resource.",
          "oneOf": [
            {
              "pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ApiKeyRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "NGINX.NGINXPLUS/nginxDeployments/apiKeys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_certificates": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Certificate",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "NGINX.NGINXPLUS/nginxDeployments/certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_configurations": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/configurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Configuration",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxConfigurationRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "NGINX.NGINXPLUS/nginxDeployments/configurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_wafPolicies": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/wafPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the WafPolicy",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxDeploymentWafPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "NGINX.NGINXPLUS/nginxDeployments/wafPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ApiKeyRequestProperties": {
      "description": "Properties for an API key request.",
      "properties": {
        "endDateTime": {
          "description": "Expiry of the key in UTC date-time format.",
          "type": "string"
        },
        "secretText": {
          "description": "The secret text for the API key",
          "type": "string"
        }
      },
      "required": [
        "secretText",
        "endDateTime"
      ],
      "type": "object"
    },
    "AutoScaleSettings": {
      "description": "Auto-scale settings for the deployment.",
      "properties": {
        "profiles": {
          "description": "List of scale profiles.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "profiles"
      ],
      "type": "object"
    },
    "AutoUpgradeProfile": {
      "description": "Auto-upgrade profile for the deployment.",
      "properties": {
        "upgradeChannel": {
          "description": "The upgrade channel.",
          "type": "string"
        }
      },
      "required": [
        "upgradeChannel"
      ],
      "type": "object"
    },
    "DeploymentWafPolicyApplyingStatus": {
      "description": "Applying status for a WAF policy.",
      "properties": {
        "code": {
          "description": "The apply status code. Can be any free form text",
          "type": "string"
        },
        "displayStatus": {
          "description": "The human-readable apply status.",
          "type": "string"
        },
        "time": {
          "description": "The timestamp when apply status was recorded in UTC.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "displayStatus",
        "time"
      ],
      "type": "object"
    },
    "DeploymentWafPolicyCompilingStatus": {
      "description": "Compilation status for a WAF policy.",
      "properties": {
        "code": {
          "description": "The compilation status code. Can be any free form text",
          "type": "string"
        },
        "displayStatus": {
          "description": "The human-readable compilation status.",
          "type": "string"
        },
        "time": {
          "description": "The timestamp when compilation status was recorded in UTC timezone and RFC 3339 format.\nExample: `2025-07-08T10:11:08.856Z`.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "displayStatus",
        "time"
      ],
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "NginxAppProtect": {
      "description": "Nginx App Protect configuration.",
      "properties": {
        "webApplicationFirewallSettings": {
          "description": "Web application firewall settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "webApplicationFirewallStatus": {
          "description": "Web application firewall status.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "webApplicationFirewallSettings",
        "webApplicationFirewallStatus"
      ],
      "type": "object"
    },
    "NginxCertificateErrorResponseBody": {
      "description": "Error details for a certificate resource.",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NginxCertificateProperties": {
      "description": "Properties of an Nginx certificate resource.",
      "properties": {
        "certificateError": {
          "description": "Error details for the certificate, if any.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxCertificateErrorResponseBody"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "certificateVirtualPath": {
          "description": "The virtual path to the certificate file. This is a path that would be used in an Nginx configuration file, for example, /etc/nginx/ssl/cert.pem.",
          "type": "string"
        },
        "keyVaultSecretCreated": {
          "description": "The creation time of the Key Vault secret in UTC RFC 3339 format.\nExample: `2025-07-08T10:11:08.856Z`.",
          "type": "string"
        },
        "keyVaultSecretId": {
          "description": "The Key Vault secret ID. Example: `https://myvault.vault.azure.net/secrets/mysecret/1234567890abcdef1234567890abcdef`.",
          "type": "string"
        },
        "keyVaultSecretVersion": {
          "description": "The Key Vault secret version.",
          "type": "string"
        },
        "keyVirtualPath": {
          "description": "The virtual path to the key file. This is a path that would be used in an Nginx configuration file, for example, /etc/nginx/ssl/key.key.",
          "type": "string"
        },
        "sha1Thumbprint": {
          "description": "The SHA1 thumbprint of the certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NginxConfigurationFile": {
      "description": "Represents a configuration file.",
      "properties": {
        "content": {
          "description": "File content in Nginx configuration format, base64 encoded.",
          "type": "string"
        },
        "virtualPath": {
          "description": "Virtual path of the file.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NginxConfigurationPackage": {
      "description": "Represents a configuration package.",
      "properties": {
        "data": {
          "description": "Package data. This is base64 encoded content of the files archive.",
          "type": "string"
        },
        "protectedFiles": {
          "description": "List of protected files in the package.\nThese are standard file paths relative to the archive uploaded",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NginxConfigurationProtectedFileContent": {
      "description": "Request model for a protected configuration file.",
      "properties": {
        "content": {
          "description": "File content in Nginx configuration format, UTF-8 encoded.",
          "type": "string"
        },
        "contentHash": {
          "description": "Content hash of the file using SHA-256 algorithm.",
          "type": "string"
        },
        "virtualPath": {
          "description": "Virtual path of the file.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NginxConfigurationRequestProperties": {
      "description": "Properties for an Nginx configuration request.",
      "properties": {
        "files": {
          "description": "List of configuration files.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NginxConfigurationFile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "package": {
          "description": "Configuration package data.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxConfigurationPackage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protectedFiles": {
          "description": "List of protected file requests.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NginxConfigurationProtectedFileContent"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rootFile": {
          "description": "Root file path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NginxDeploymentProperties": {
      "description": "Properties of an Nginx deployment.",
      "properties": {
        "autoUpgradeProfile": {
          "description": "Auto-upgrade profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoUpgradeProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataplaneApiEndpoint": {
          "description": "Dataplane API endpoint.",
          "type": "string"
        },
        "enableDiagnosticsSupport": {
          "description": "Whether diagnostics support is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipAddress": {
          "description": "The IP address of the deployment.",
          "type": "string"
        },
        "logging": {
          "description": "Logging configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxLogging"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "The network profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nginxAppProtect": {
          "description": "Nginx App Protect configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxAppProtect"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nginxVersion": {
          "description": "The Nginx version.",
          "type": "string"
        },
        "scalingProperties": {
          "description": "Scaling properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxDeploymentScalingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userProfile": {
          "description": "User profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxDeploymentUserProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "nginxVersion",
        "networkProfile",
        "ipAddress",
        "enableDiagnosticsSupport",
        "logging",
        "scalingProperties",
        "autoUpgradeProfile",
        "userProfile",
        "nginxAppProtect",
        "dataplaneApiEndpoint"
      ],
      "type": "object"
    },
    "NginxDeploymentScalingProperties": {
      "description": "Scaling properties for the deployment.",
      "properties": {
        "autoScaleSettings": {
          "description": "Auto-scale settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacity": {
          "description": "The capacity of the deployment.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "capacity",
        "autoScaleSettings"
      ],
      "type": "object"
    },
    "NginxDeploymentUserProfile": {
      "description": "User profile for the deployment.",
      "properties": {
        "preferredEmail": {
          "description": "The preferred email address.",
          "type": "string"
        }
      },
      "required": [
        "preferredEmail"
      ],
      "type": "object"
    },
    "NginxDeploymentWafPolicyProperties": {
      "description": "Properties of a WAF policy resource.",
      "properties": {
        "applyingState": {
          "description": "The applying status of the WAF policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentWafPolicyApplyingStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compilingState": {
          "description": "The compiling status of the WAF policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentWafPolicyCompilingStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "content": {
          "description": "The raw policy content (base64-encoded)."
        },
        "filepath": {
          "description": "The file path of the WAF policy.",
          "type": "string"
        }
      },
      "required": [
        "content",
        "filepath",
        "compilingState",
        "applyingState"
      ],
      "type": "object"
    },
    "NginxFrontendIPConfiguration": {
      "description": "Frontend IP configuration.",
      "properties": {
        "privateIPAddresses": {
          "description": "Private IP addresses.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NginxPrivateIPAddress"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicIPAddresses": {
          "description": "Public IP addresses.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NginxPublicIPAddress"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "publicIPAddresses",
        "privateIPAddresses"
      ],
      "type": "object"
    },
    "NginxLogging": {
      "description": "Logging configuration for the deployment.",
      "properties": {
        "storageAccount": {
          "description": "Storage account configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxStorageAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "storageAccount"
      ],
      "type": "object"
    },
    "NginxNetworkInterfaceConfiguration": {
      "description": "Network interface configuration.",
      "properties": {
        "subnetId": {
          "description": "The subnet resource ID.",
          "type": "string"
        }
      },
      "required": [
        "subnetId"
      ],
      "type": "object"
    },
    "NginxNetworkProfile": {
      "description": "Network profile for the deployment.",
      "properties": {
        "frontEndIPConfiguration": {
          "description": "Frontend IP configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxFrontendIPConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkInterfaceConfiguration": {
          "description": "Network interface configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxNetworkInterfaceConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "frontEndIPConfiguration",
        "networkInterfaceConfiguration"
      ],
      "type": "object"
    },
    "NginxPrivateIPAddress": {
      "description": "Private IP address configuration.",
      "properties": {
        "privateIPAddress": {
          "description": "The private IP address.",
          "type": "string"
        },
        "privateIPAllocationMethod": {
          "description": "The allocation method for the private IP.",
          "oneOf": [
            {
              "enum": [
                "Static",
                "Dynamic"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnetId": {
          "description": "The subnet resource ID.",
          "type": "string"
        }
      },
      "required": [
        "privateIPAddress",
        "privateIPAllocationMethod",
        "subnetId"
      ],
      "type": "object"
    },
    "NginxPublicIPAddress": {
      "description": "Public IP address reference.",
      "properties": {
        "id": {
          "description": "The resource ID of the public IP address.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "NginxStorageAccount": {
      "description": "Storage account configuration for logging.",
      "properties": {
        "accountName": {
          "description": "The storage account name.",
          "type": "string"
        },
        "containerName": {
          "description": "The container name.",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "containerName"
      ],
      "type": "object"
    },
    "ScaleProfile": {
      "description": "Scale profile for auto-scaling.",
      "properties": {
        "capacity": {
          "description": "Capacity settings for the scale profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleProfileCapacity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the scale profile.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "capacity"
      ],
      "type": "object"
    },
    "ScaleProfileCapacity": {
      "description": "Capacity settings for a scale profile.",
      "properties": {
        "max": {
          "description": "Maximum capacity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "min": {
          "description": "Minimum capacity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "min",
        "max"
      ],
      "type": "object"
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "capacity": {
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "oneOf": [
            {
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "WebApplicationFirewallComponentVersions": {
      "description": "Component versions for the web application firewall.",
      "properties": {
        "wafEngineVersion": {
          "description": "WAF engine version.",
          "type": "string"
        },
        "wafNginxVersion": {
          "description": "WAF Nginx version.",
          "type": "string"
        }
      },
      "required": [
        "wafEngineVersion",
        "wafNginxVersion"
      ],
      "type": "object"
    },
    "WebApplicationFirewallPackage": {
      "description": "Web application firewall package information.",
      "properties": {
        "revisionDatetime": {
          "description": "The revision datetime.",
          "type": "string"
        },
        "version": {
          "description": "The package version.",
          "type": "string"
        }
      },
      "required": [
        "version",
        "revisionDatetime"
      ],
      "type": "object"
    },
    "WebApplicationFirewallSettings": {
      "description": "Web application firewall settings.",
      "properties": {
        "activationState": {
          "description": "The activation state of the WAF.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "activationState"
      ],
      "type": "object"
    },
    "WebApplicationFirewallStatus": {
      "description": "Web application firewall status.",
      "properties": {
        "attackSignaturesPackage": {
          "description": "Attack signatures package.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallPackage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "botSignaturesPackage": {
          "description": "Bot signatures package.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallPackage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "componentVersions": {
          "description": "Component versions.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallComponentVersions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threatCampaignsPackage": {
          "description": "Threat campaigns package.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebApplicationFirewallPackage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "wafRelease": {
          "description": "The WAF release version.",
          "type": "string"
        }
      },
      "required": [
        "wafRelease",
        "attackSignaturesPackage",
        "botSignaturesPackage",
        "threatCampaignsPackage",
        "componentVersions"
      ],
      "type": "object"
    },
    "nginxDeployments_apiKeys_childResource": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/apiKeys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the API Key resource.",
          "oneOf": [
            {
              "pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ApiKeyRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "apiKeys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_certificates_childResource": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Certificate",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_configurations_childResource": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/configurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Configuration",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxConfigurationRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "configurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "nginxDeployments_wafPolicies_childResource": {
      "description": "NGINX.NGINXPLUS/nginxDeployments/wafPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the WafPolicy",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NginxDeploymentWafPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "wafPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}